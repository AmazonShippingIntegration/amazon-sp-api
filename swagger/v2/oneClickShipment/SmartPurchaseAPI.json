{
	"swagger": "2.0",
	"info": {
		"description": "The Amazon Shipping API is designed to support outbound shipping use cases both for orders originating on Amazon-owned marketplaces as well as external channels/marketplaces. With these APIs, you can request shipping rates, create shipments, cancel shipments, and track shipments.",
		"version": "v2",
		"title": "Amazon Shipping API",
		"contact": {
			"name": "Amazon Shipping API Support",
			"email": "swa-api-core@amazon.com"
		},
		"license": {
			"name": "Amazon Software License",
			"url": "https://aws.amazon.com/asl/"
		}
	},
	"host": "sellingpartnerapi-eu.amazon.com",
	"schemes": [
		"https"
	],
	"consumes": [
		"application/json"
	],
	"produces": [
		"application/json"
	],
	"paths": {
		"/shipping/v2/oneClickShipment": {
			"post": {
				"tags": [
					"shipping"
				],
				"description": "Purchases a shipping service Id and returns purchase related details and documents.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 80 | 100 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
				"operationId": "oneClickShipment",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/OneClickShipmentRequest"
						}
					},
					{
						"name": "x-amzn-shipping-business-id",
						"in": "header",
						"description": "Amazon shipping business to assume for this request. The default is AmazonShipping_UK.",
						"required": false,
						"type": "string",
						"enum": [
							"AmazonShipping_US",
							"AmazonShipping_IN",
							"AmazonShipping_UK",
							"AmazonShipping_IT",
							"AmazonShipping_ES",
							"AmazonShipping_FR",
							"AmazonShipping_JP"
						],
						"x-docgen-enum-table-extension": [
							{
								"value": "AmazonShipping_US",
								"description": "The United States Amazon shipping business."
							},
							{
								"value": "AmazonShipping_IN",
								"description": "The India Amazon shipping business."
							},
							{
								"value": "AmazonShipping_UK",
								"description": "The United Kingdom Amazon shipping business."
							},
							{
								"value": "AmazonShipping_IT",
								"description": "The Italy Amazon shipping business."
							},
							{
								"value": "AmazonShipping_ES",
								"description": "The Espain Amazon shipping business."
							},
							{
								"value": "AmazonShipping_FR",
								"description": "The France Amazon shipping business."
							},
							{
								"value": "AmazonShipping_JP",
								"description": "The Japan Amazon shipping business."
							}
						]
					}
				],
				"responses": {
					"200": {
						"description": "Success.",
						"schema": {
							"$ref": "#/definitions/OneClickShipmentResponse"
						},
						"examples": {
							"application/json": {
								"shipmentId": "87852211788104",
								"packageDocumentDetails": [
									{
										"packageClientReferenceId": "abcd",
										"packageDocuments": [
											{
												"type": "LABEL",
												"format": "PNG",
												"contents": "sdioadaiosfhdodsaiufhouafhoudfhdouahfac=="
											}
										],
										"trackingId": 1578648261977
									}
								],
								"promise": {
									"pickupWindow": {
										"start": "2019-12-11T07:09:05.513Z",
										"end": "2019-12-11T09:09:05.513Z"
									},
									"deliveryWindow": {
										"start": "2019-12-13T07:09:05.513Z",
										"end": "2019-12-13T09:09:05.513Z"
									}
								},
								"carrier": {
									"id": "AMZN_UK",
									"name": "Amazon Shipping"
								},
								"service": {
									"id": "SWA-UK-PREM",
									"name": "Amazon Shipping One Day"
								},
								"totalCharge": {
									"unit": "GBP",
									"value": 4.76
								}
							}
						},
						"headers": {
							"x-amzn-RateLimit-Limit": {
								"type": "string",
								"description": "Your rate limit (requests per second) for this operation."
							},
							"x-amzn-RequestId": {
								"type": "string",
								"description": "Unique request reference identifier."
							}
						}
					},
					"400": {
						"description": "Request has missing or invalid parameters and cannot be parsed.",
						"schema": {
							"$ref": "#/definitions/ErrorList"
						},
						"examples": {
							"application/json": {
								"errors": [
									{
										"code": "InvalidRequest",
										"message": "Request is missing or has invalid parameters",
										"details": "RateId cannot be null"
									}
								]
							}
						},
						"headers": {
							"x-amzn-RateLimit-Limit": {
								"type": "string",
								"description": "Your rate limit (requests per second) for this operation."
							},
							"x-amzn-RequestId": {
								"type": "string",
								"description": "Unique request reference identifier."
							}
						}
					},
					"401": {
						"description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
						"schema": {
							"$ref": "#/definitions/ErrorList"
						},
						"examples": {
							"application/json": {
								"errors": [
									{
										"code": "Unauthorized",
										"message": "You don't have access to the requested response or the credentials are invalid."
									}
								]
							}
						},
						"headers": {
							"x-amzn-RateLimit-Limit": {
								"type": "string",
								"description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
							},
							"x-amzn-RequestId": {
								"type": "string",
								"description": "Unique request reference identifier."
							}
						}
					},
					"403": {
						"description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
						"schema": {
							"$ref": "#/definitions/ErrorList"
						},
						"examples": {
							"application/json": {
								"errors": [
									{
										"code": "Unauthorized",
										"message": "You don't have access to the requested response or the credentials are invalid."
									}
								]
							}
						},
						"headers": {
							"x-amzn-RequestId": {
								"type": "string",
								"description": "Unique request reference identifier."
							}
						}
					},
					"404": {
						"description": "The resource specified does not exist.",
						"schema": {
							"$ref": "#/definitions/ErrorList"
						},
						"examples": {
							"application/json": {
								"errors": [
									{
										"code": "NotFound",
										"message": "The requested resource is invalid or doesn't exist"
									}
								]
							}
						},
						"headers": {
							"x-amzn-RateLimit-Limit": {
								"type": "string",
								"description": "Your rate limit (requests per second) for this operation."
							},
							"x-amzn-RequestId": {
								"type": "string",
								"description": "Unique request reference identifier."
							}
						}
					},
					"413": {
						"description": "The request size exceeded the maximum accepted size.",
						"schema": {
							"$ref": "#/definitions/ErrorList"
						},
						"examples": {
							"application/json": {
								"errors": [
									{
										"code": "InvalidRequest",
										"message": "The request payload size is greater than maximum accepted size."
									}
								]
							}
						},
						"headers": {
							"x-amzn-RateLimit-Limit": {
								"type": "string",
								"description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
							},
							"x-amzn-RequestId": {
								"type": "string",
								"description": "Unique request reference identifier."
							}
						}
					},
					"415": {
						"description": "The request payload is in an unsupported format.",
						"schema": {
							"$ref": "#/definitions/ErrorList"
						},
						"examples": {
							"application/json": {
								"errors": [
									{
										"code": "InvalidRequest",
										"message": "The request payload format is not supported."
									}
								]
							}
						},
						"headers": {
							"x-amzn-RateLimit-Limit": {
								"type": "string",
								"description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
							},
							"x-amzn-RequestId": {
								"type": "string",
								"description": "Unique request reference identifier."
							}
						}
					},
					"429": {
						"description": "The frequency of requests was greater than allowed.",
						"schema": {
							"$ref": "#/definitions/ErrorList"
						},
						"examples": {
							"application/json": {
								"errors": [
									{
										"code": "TooManyRequests",
										"message": "The total number of requests exceeded your allowed limit."
									}
								]
							}
						},
						"headers": {
							"x-amzn-RateLimit-Limit": {
								"type": "string",
								"description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
							},
							"x-amzn-RequestId": {
								"type": "string",
								"description": "Unique request reference identifier."
							}
						}
					},
					"500": {
						"description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
						"schema": {
							"$ref": "#/definitions/ErrorList"
						},
						"examples": {
							"application/json": {
								"errors": [
									{
										"code": "InternalError",
										"message": "Something went wrong while processing the request."
									}
								]
							}
						},
						"headers": {
							"x-amzn-RateLimit-Limit": {
								"type": "string",
								"description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
							},
							"x-amzn-RequestId": {
								"type": "string",
								"description": "Unique request reference identifier."
							}
						}
					},
					"503": {
						"description": "Temporary overloading or maintenance of the server.",
						"schema": {
							"$ref": "#/definitions/ErrorList"
						},
						"examples": {
							"application/json": {
								"errors": [
									{
										"code": "ServiceUnavailable",
										"message": "Service temporarily unavailable or down for maintenance. Please try again after sometime."
									}
								]
							}
						},
						"headers": {
							"x-amzn-RateLimit-Limit": {
								"type": "string",
								"description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
							},
							"x-amzn-RequestId": {
								"type": "string",
								"description": "Unique request reference identifier."
							}
						}
					}
				}
			},
			"parameters": []
		}
	},
	"definitions": {
		"Error": {
			"type": "object",
			"required": [
				"code",
				"message"
			],
			"properties": {
				"code": {
					"type": "string",
					"description": "An error code that identifies the type of error that occurred."
				},
				"message": {
					"type": "string",
					"description": "A message that describes the error condition."
				},
				"details": {
					"type": "string",
					"description": "Additional details that can help the caller understand or fix the issue."
				}
			},
			"description": "Error response returned when the request is unsuccessful."
		},
		"ErrorList": {
			"type": "object",
			"description": "A list of error responses returned when a request is unsuccessful.",
			"required": [
				"errors"
			],
			"properties": {
				"errors": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Error"
					}
				}
			}
		},
		"Weight": {
			"description": "The weight in the units indicated.",
			"type": "object",
			"required": [
				"unit",
				"value"
			],
			"properties": {
				"unit": {
					"type": "string",
					"description": "The unit of measurement.",
					"enum": [
						"GRAM",
						"KILOGRAM",
						"OUNCE",
						"POUND"
					],
					"x-docgen-enum-table-extension": [
						{
							"value": "GRAM",
							"description": "Metric unit of mass equal to one thousandth of a kilogram."
						},
						{
							"value": "KILOGRAM",
							"description": "Metric unit of mass."
						},
						{
							"value": "OUNCE",
							"description": "The imperial unit of weight that is one sixteenth of a pound."
						},
						{
							"value": "POUND",
							"description": "The imperial unit of weight."
						}
					]
				},
				"value": {
					"type": "number",
					"description": "The measurement value."
				}
			}
		},
		"InvoiceDetails": {
			"description": "The invoice details for charges associated with the goods in the package. Only applies to certain regions.",
			"type": "object",
			"properties": {
				"invoiceNumber": {
					"type": "string",
					"description": "The invoice number of the item."
				},
				"invoiceDate": {
					"type": "string",
					"format": "date-time",
					"description": "The invoice date of the item in ISO 8061 format."
				}
			}
		},
		"ChargeList": {
			"type": "array",
			"description": "A list of charges based on the shipping service charges applied on a package.",
			"items": {
				"$ref": "#/definitions/ChargeComponent"
			}
		},
		"ChargeComponent": {
			"type": "object",
			"description": "The type and amount of a charge applied on a package.",
			"properties": {
				"amount": {
					"$ref": "#/definitions/Currency"
				},
				"chargeType": {
					"type": "string",
					"description": "The type of charge.",
					"enum": [
						"TAX",
						"DISCOUNT"
					],
					"x-docgen-enum-table-extension": [
						{
							"value": "TAX",
							"description": "A tax imposed on a package."
						},
						{
							"value": "DISCOUNT",
							"description": "A discount deducted from the cost of a package."
						}
					]
				}
			}
		},
		"Currency": {
			"description": "The monetary value in the currency indicated, in ISO 4217 standard format.",
			"type": "object",
			"required": [
				"unit",
				"value"
			],
			"properties": {
				"value": {
					"type": "number",
					"description": "The monetary value."
				},
				"unit": {
					"type": "string",
					"description": "The ISO 4217 format 3-character currency code.",
					"minLength": 3,
					"maxLength": 3
				}
			}
		},
		"Dimensions": {
			"type": "object",
			"required": [
				"height",
				"length",
				"unit",
				"width"
			],
			"properties": {
				"length": {
					"type": "number",
					"description": "The length of the package."
				},
				"width": {
					"type": "number",
					"description": "The width of the package."
				},
				"height": {
					"type": "number",
					"description": "The height of the package."
				},
				"unit": {
					"type": "string",
					"description": "The unit of measurement.",
					"enum": [
						"INCH",
						"CENTIMETER"
					],
					"x-docgen-enum-table-extension": [
						{
							"value": "INCH",
							"description": "The imperial unit of length equal to one twelfth of a foot."
						},
						{
							"value": "CENTIMETER",
							"description": "A metric unit of length, equal to one hundredth of a meter."
						}
					]
				}
			},
			"description": "A set of measurements for a three-dimensional object."
		},
		"RequestToken": {
			"type": "string",
			"description": "A unique token generated to identify a getRates operation."
		},
		"RateId": {
			"type": "string",
			"description": "An identifier for the rate (shipment offering) provided by a shipping service provider."
		},
		"CarrierId": {
			"type": "string",
			"description": "The carrier identifier for the offering, provided by the carrier."
		},
		"CarrierName": {
			"type": "string",
			"description": "The carrier name for the offering."
		},
		"PackageClientReferenceId": {
			"type": "string",
			"description": "A client provided unique identifier for a package being shipped. This value should be saved by the client to pass as a parameter to the getShipmentDocuments operation."
		},
		"ShipmentId": {
			"type": "string",
			"description": "The unique shipment identifier provided by a shipping service."
		},
		"TrackingId": {
			"type": "string",
			"description": "The carrier generated identifier for a package in a purchased shipment."
		},
		"AlternateLegTrackingId": {
			"type": "string",
			"description": "The carrier generated reverse identifier for a returned package in a purchased shipment."
		},
		"ServiceId": {
			"type": "string",
			"description": "An identifier for the shipping service."
		},
		"ServiceName": {
			"type": "string",
			"description": "The name of the shipping service."
		},
		"ShipperInstruction": {
			"type": "object",
			"properties": {
				"deliveryNotes": {
					"type": "string",
					"description": "The delivery note for the shipment",
					"maxLength": 256
				}
			},
			"description": "The shipper instruction."
		},
		"Address": {
			"type": "object",
			"required": [
				"addressLine1",
				"city",
				"countryCode",
				"name",
				"postalCode",
				"stateOrRegion"
			],
			"properties": {
				"name": {
					"type": "string",
					"description": "The name of the person, business or institution at the address.",
					"minLength": 1,
					"maxLength": 50
				},
				"addressLine1": {
					"type": "string",
					"description": "The first line of the address.",
					"minLength": 1,
					"maxLength": 60
				},
				"addressLine2": {
					"type": "string",
					"description": "Additional address information, if required.",
					"minLength": 1,
					"maxLength": 60
				},
				"addressLine3": {
					"type": "string",
					"description": "Additional address information, if required.",
					"minLength": 1,
					"maxLength": 60
				},
				"companyName": {
					"type": "string",
					"description": "The name of the business or institution associated with the address."
				},
				"stateOrRegion": {
					"$ref": "#/definitions/StateOrRegion"
				},
				"city": {
					"$ref": "#/definitions/City"
				},
				"countryCode": {
					"$ref": "#/definitions/CountryCode"
				},
				"postalCode": {
					"$ref": "#/definitions/PostalCode"
				},
				"email": {
					"type": "string",
					"description": "The email address of the contact associated with the address.",
					"maxLength": 64
				},
				"phoneNumber": {
					"type": "string",
					"description": "The phone number of the person, business or institution located at that address, including the country calling code.",
					"minLength": 1,
					"maxLength": 20
				}
			},
			"description": "The address."
		},
		"StateOrRegion": {
			"type": "string",
			"description": "The state, county or region where the person, business or institution is located."
		},
		"City": {
			"type": "string",
			"description": "The city or town where the person, business or institution is located."
		},
		"CountryCode": {
			"type": "string",
			"description": "The two digit country code. Follows ISO 3166-1 alpha-2 format."
		},
		"PostalCode": {
			"type": "string",
			"description": "The postal code of that address. It contains a series of letters or digits or both, sometimes including spaces or punctuation."
		},
		"Location": {
			"type": "object",
			"properties": {
				"stateOrRegion": {
					"$ref": "#/definitions/StateOrRegion"
				},
				"city": {
					"$ref": "#/definitions/City"
				},
				"countryCode": {
					"$ref": "#/definitions/CountryCode"
				},
				"postalCode": {
					"$ref": "#/definitions/PostalCode"
				}
			},
			"description": "The location where the person, business or institution is located."
		},
		"DocumentFormat": {
			"type": "string",
			"description": "The file format of the document.",
			"enum": [
				"PDF",
				"PNG",
				"ZPL"
			],
			"x-docgen-enum-table-extension": [
				{
					"value": "PDF",
					"description": "The Portable Document Format (PDF) file format. Used to present documents, including text formatting and images, in a manner independent of application software, hardware, and operating systems."
				},
				{
					"value": "PNG",
					"description": "Portable Network Graphics (PNG) is a raster-graphics file format that supports lossless data compression."
				},
				{
					"value": "ZPL",
					"description": "Zebra Programming Language (ZPL) format is from Zebra Technologies. It's used primarily for labeling applications and can only be used with ZPL compatible printers."
				}
			]
		},
		"DocumentType": {
			"type": "string",
			"description": "The type of shipping document.",
			"enum": [
				"PACKSLIP",
				"LABEL",
				"RECEIPT",
				"CUSTOM_FORM"
			],
			"x-docgen-enum-table-extension": [
				{
					"value": "PACKSLIP",
					"description": "A listing of the items packed within the shipment."
				},
				{
					"value": "LABEL",
					"description": "The shipping label for the specific shipment."
				},
				{
					"value": "RECEIPT",
					"description": "The receipt of the shipment."
				},
				{
					"value": "CUSTOM_FORM",
					"description": "The customs documentation for a cross-border shipment."
				}
			]
		},
		"Dpi": {
			"type": "integer",
			"description": "The dots per inch (DPI) value used in printing. This value represents a measure of the resolution of the document."
		},
		"PageLayout": {
			"type": "string",
			"description": "Indicates the position of the label on the paper. Should be the same value as returned in getRates response."
		},
		"NeedFileJoining": {
			"type": "boolean",
			"description": "When true, files should be stitched together. Otherwise, files should be returned separately. Defaults to false."
		},
		"Contents": {
			"type": "string",
			"description": "A Base64 encoded string of the file contents."
		},
		"PackageDocumentList": {
			"type": "array",
			"description": "A list of documents related to a package.",
			"items": {
				"$ref": "#/definitions/PackageDocument"
			}
		},
		"PackageDocument": {
			"type": "object",
			"required": [
				"contents",
				"format",
				"type"
			],
			"properties": {
				"type": {
					"$ref": "#/definitions/DocumentType"
				},
				"format": {
					"$ref": "#/definitions/DocumentFormat"
				},
				"contents": {
					"$ref": "#/definitions/Contents"
				}
			},
			"description": "A document related to a package."
		},
		"PrintOptionList": {
			"type": "array",
			"description": "A list of the format options for a label.",
			"items": {
				"$ref": "#/definitions/PrintOption"
			}
		},
		"PrintOption": {
			"type": "object",
			"required": [
				"supportedDocumentDetails",
				"supportedFileJoiningOptions",
				"supportedPageLayouts"
			],
			"properties": {
				"supportedDPIs": {
					"type": "array",
					"description": "A list of the supported DPI options for a document.",
					"items": {
						"$ref": "#/definitions/Dpi"
					}
				},
				"supportedPageLayouts": {
					"type": "array",
					"description": "A list of the supported page layout options for a document.",
					"items": {
						"$ref": "#/definitions/PageLayout"
					}
				},
				"supportedFileJoiningOptions": {
					"type": "array",
					"description": "A list of the supported needFileJoining boolean values for a document.",
					"items": {
						"$ref": "#/definitions/NeedFileJoining"
					}
				},
				"supportedDocumentDetails": {
					"description": "A list of the supported documented details.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/SupportedDocumentDetail"
					}
				}
			},
			"description": "The format options available for a label."
		},
		"DocumentSize": {
			"type": "object",
			"required": [
				"length",
				"unit",
				"width"
			],
			"properties": {
				"width": {
					"description": "The width of the document measured in the units specified.",
					"type": "number"
				},
				"length": {
					"description": "The length of the document measured in the units specified.",
					"type": "number"
				},
				"unit": {
					"type": "string",
					"description": "The unit of measurement.",
					"enum": [
						"INCH",
						"CENTIMETER"
					],
					"x-docgen-enum-table-extension": [
						{
							"value": "INCH",
							"description": "The imperial unit of length equal to one twelfth of a foot."
						},
						{
							"value": "CENTIMETER",
							"description": "A metric unit of length, equal to one hundredth of a meter."
						}
					]
				}
			},
			"description": "The size dimensions of the label."
		},
		"SupportedDocumentDetail": {
			"type": "object",
			"required": [
				"isMandatory",
				"name"
			],
			"properties": {
				"name": {
					"$ref": "#/definitions/DocumentType"
				},
				"isMandatory": {
					"type": "boolean",
					"description": "When true, the supported document type is required."
				}
			},
			"description": "The supported document types for a service offering."
		},
		"RequestedDocumentSpecification": {
			"type": "object",
			"required": [
				"format",
				"needFileJoining",
				"requestedDocumentTypes",
				"size"
			],
			"properties": {
				"format": {
					"$ref": "#/definitions/DocumentFormat"
				},
				"size": {
					"$ref": "#/definitions/DocumentSize"
				},
				"dpi": {
					"$ref": "#/definitions/Dpi"
				},
				"pageLayout": {
					"$ref": "#/definitions/PageLayout"
				},
				"needFileJoining": {
					"$ref": "#/definitions/NeedFileJoining"
				},
				"requestedDocumentTypes": {
					"description": "A list of the document types requested.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/DocumentType"
					}
				}
			},
			"description": "The document specifications requested. For calls to the purchaseShipment operation, the shipment purchase fails if the specified document specifications are not among those returned in the response to the getRates operation."
		},
		"SupportedDocumentSpecificationList": {
			"type": "array",
			"description": "A list of the document specifications supported for a shipment service offering.",
			"items": {
				"$ref": "#/definitions/SupportedDocumentSpecification"
			}
		},
		"SupportedDocumentSpecification": {
			"type": "object",
			"required": [
				"format",
				"printOptions",
				"size"
			],
			"properties": {
				"format": {
					"$ref": "#/definitions/DocumentFormat"
				},
				"size": {
					"$ref": "#/definitions/DocumentSize"
				},
				"printOptions": {
					"$ref": "#/definitions/PrintOptionList"
				}
			},
			"description": "Document specification that is supported for a service offering."
		},
		"Item": {
			"type": "object",
			"required": [
				"quantity"
			],
			"properties": {
				"itemValue": {
					"$ref": "#/definitions/Currency"
				},
				"description": {
					"type": "string",
					"description": "The product description of the item."
				},
				"itemIdentifier": {
					"type": "string",
					"description": "A unique identifier for an item provided by the client."
				},
				"quantity": {
					"type": "integer",
					"description": "The number of units. This value is required."
				},
				"weight": {
					"$ref": "#/definitions/Weight"
				},
				"isHazmat": {
					"type": "boolean",
					"description": "When true, the item qualifies as hazardous materials (hazmat). Defaults to false."
				},
				"productType": {
					"type": "string",
					"description": "The product type of the item."
				},
				"invoiceDetails": {
					"$ref": "#/definitions/InvoiceDetails"
				},
				"serialNumbers": {
					"type": "array",
					"items": {
						"type": "string"
					},
					"description": "A list of unique serial numbers in an Amazon package that can be used to guarantee non-fraudulent items. The number of serial numbers in the list must be less than or equal to the quantity of items being shipped. Only applicable when channel source is Amazon."
				},
				"directFulfillmentItemIdentifiers": {
					"$ref": "#/definitions/DirectFulfillmentItemIdentifiers"
				}
			},
			"description": "An item in a package."
		},
		"ItemList": {
			"type": "array",
			"description": "A list of items.",
			"items": {
				"$ref": "#/definitions/Item"
			}
		},
		"Package": {
			"type": "object",
			"required": [
				"dimensions",
				"insuredValue",
				"items",
				"packageClientReferenceId",
				"weight"
			],
			"properties": {
				"dimensions": {
					"$ref": "#/definitions/Dimensions"
				},
				"weight": {
					"$ref": "#/definitions/Weight"
				},
				"insuredValue": {
					"$ref": "#/definitions/Currency"
				},
				"isHazmat": {
					"type": "boolean",
					"description": "When true, the package contains hazardous materials. Defaults to false."
				},
				"sellerDisplayName": {
					"type": "string",
					"description": "The seller name displayed on the label."
				},
				"charges": {
					"$ref": "#/definitions/ChargeList"
				},
				"packageClientReferenceId": {
					"$ref": "#/definitions/PackageClientReferenceId"
				},
				"items": {
					"$ref": "#/definitions/ItemList"
				}
			},
			"description": "A package to be shipped through a shipping service offering."
		},
		"PackageList": {
			"type": "array",
			"description": "A list of packages to be shipped through a shipping service offering.",
			"items": {
				"$ref": "#/definitions/Package"
			}
		},
		"DirectFulfillmentItemIdentifiers": {
			"type": "object",
			"required": [
				"lineItemID"
			],
			"properties": {
				"lineItemID": {
					"type": "string",
					"description": "A unique identifier for an item provided by the client for a direct fulfillment shipment. This is only populated for direct fulfillment multi-piece shipments. It is required if a vendor wants to change the configuration of the packages in which the purchase order is shipped."
				},
				"pieceNumber": {
					"type": "string",
					"description": "A unique identifier for an item provided by the client for a direct fulfillment shipment. This is only populated if a single line item has multiple pieces. Defaults to 1."
				}
			},
			"description": "Item identifiers for an item in a direct fulfillment shipment."
		},
		"PackageDocumentDetail": {
			"type": "object",
			"required": [
				"packageClientReferenceId",
				"packageDocuments"
			],
			"properties": {
				"packageClientReferenceId": {
					"$ref": "#/definitions/PackageClientReferenceId"
				},
				"packageDocuments": {
					"$ref": "#/definitions/PackageDocumentList"
				},
				"trackingId": {
					"$ref": "#/definitions/TrackingId"
				}
			},
			"description": "The post-purchase details of a package that will be shipped using a shipping service."
		},
		"PackageDocumentDetailList": {
			"type": "array",
			"description": "A list of post-purchase details about a package that will be shipped using a shipping service.",
			"items": {
				"$ref": "#/definitions/PackageDocumentDetail"
			}
		},
		"TimeWindow": {
			"type": "object",
			"properties": {
				"start": {
					"type": "string",
					"format": "date-time",
					"description": "The start time of the time window."
				},
				"end": {
					"type": "string",
					"format": "date-time",
					"description": "The end time of the time window."
				}
			},
			"description": "The start and end time that specifies the time interval of an event."
		},
		"Promise": {
			"type": "object",
			"properties": {
				"deliveryWindow": {
					"$ref": "#/definitions/TimeWindow"
				},
				"pickupWindow": {
					"$ref": "#/definitions/TimeWindow"
				}
			},
			"description": "The time windows promised for pickup and delivery events."
		},
		"RequestedValueAddedServiceList": {
			"type": "array",
			"description": "The value-added services to be added to a shipping service purchase.",
			"items": {
				"$ref": "#/definitions/RequestedValueAddedService"
			}
		},
		"RequestedValueAddedService": {
			"type": "object",
			"required": [
				"id"
			],
			"properties": {
				"id": {
					"type": "string",
					"description": "The identifier of the selected value-added service. Must be among those returned in the response to the getRates operation."
				}
			},
			"description": "A value-added service to be applied to a shipping service purchase."
		},
		"AvailableValueAddedServiceGroupList": {
			"type": "array",
			"description": "A list of value-added services available for a shipping service offering.",
			"items": {
				"$ref": "#/definitions/AvailableValueAddedServiceGroup"
			}
		},
		"AvailableValueAddedServiceGroup": {
			"type": "object",
			"required": [
				"groupDescription",
				"groupId",
				"isRequired"
			],
			"properties": {
				"groupId": {
					"type": "string",
					"description": "The type of the value-added service group."
				},
				"groupDescription": {
					"type": "string",
					"description": "The name of the value-added service group."
				},
				"isRequired": {
					"type": "boolean",
					"description": "When true, one or more of the value-added services listed must be specified."
				},
				"valueAddedServices": {
					"type": "array",
					"description": "A list of optional value-added services available for purchase with a shipping service offering.",
					"items": {
						"$ref": "#/definitions/ValueAddedService"
					}
				}
			},
			"description": "The value-added services available for purchase with a shipping service offering."
		},
		"ValueAddedService": {
			"type": "object",
			"required": [
				"cost",
				"id",
				"name"
			],
			"properties": {
				"id": {
					"type": "string",
					"description": "The identifier for the value-added service."
				},
				"name": {
					"type": "string",
					"description": "The name of the value-added service."
				},
				"cost": {
					"description": "The cost of the value-added service.",
					"$ref": "#/definitions/Currency"
				}
			},
			"description": "A value-added service available for purchase with a shipment service offering."
		},
		"CollectOnDelivery": {
			"type": "object",
			"required": [
				"amount"
			],
			"properties": {
				"amount": {
					"$ref": "#/definitions/Currency"
				}
			},
			"description": "The amount to collect on delivery."
		},
		"ValueAddedServiceDetails": {
			"type": "object",
			"properties": {
				"collectOnDelivery": {
					"$ref": "#/definitions/CollectOnDelivery"
				}
			},
			"description": "A collection of supported value-added services."
		},
		"TaxType": {
			"type": "string",
			"description": "Indicates the type of tax.",
			"enum": [
				"GST"
			],
			"x-docgen-enum-table-extension": [
				{
					"value": "GST",
					"description": "Goods and Services Tax."
				}
			]
		},
		"TaxDetail": {
			"description": "Indicates the tax specifications associated with the shipment for customs compliance purposes in certain regions.",
			"type": "object",
			"required": [
				"taxRegistrationNumber",
				"taxType"
			],
			"properties": {
				"taxType": {
					"$ref": "#/definitions/TaxType"
				},
				"taxRegistrationNumber": {
					"description": "The shipper's tax registration number associated with the shipment for customs compliance purposes in certain regions.",
					"type": "string"
				}
			}
		},
		"TaxDetailList": {
			"type": "array",
			"description": "A list of tax detail information.",
			"items": {
				"$ref": "#/definitions/TaxDetail"
			}
		},
		"EventCode": {
			"type": "string",
			"description": "The tracking event type.",
			"enum": [
				"ReadyForReceive",
				"PickupDone",
				"Delivered",
				"Departed",
				"DeliveryAttempted",
				"Lost",
				"OutForDelivery",
				"ArrivedAtCarrierFacility",
				"Rejected",
				"Undeliverable",
				"PickupCancelled"
			],
			"x-docgen-enum-table-extension": [
				{
					"value": "ReadyForReceive",
					"description": "Package has been created and is ready for pickup at the shippers location. This is a pre-transit status event code."
				},
				{
					"value": "PickupDone",
					"description": "Package has been picked up by the service provider."
				},
				{
					"value": "Delivered",
					"description": "Package has been delivered."
				},
				{
					"value": "Departed",
					"description": "Package has departed from a particular location in carrier network."
				},
				{
					"value": "DeliveryAttempted",
					"description": "Delivery was attempted, but was unsuccessful."
				},
				{
					"value": "Lost",
					"description": "Package is lost."
				},
				{
					"value": "OutForDelivery",
					"description": "Package is out for delivery."
				},
				{
					"value": "ArrivedAtCarrierFacility",
					"description": "Package is in transit and has been received at a carrier location."
				},
				{
					"value": "Rejected",
					"description": "Package was rejected by the recipient."
				},
				{
					"value": "Undeliverable",
					"description": "Package is undeliverable."
				},
				{
					"value": "PickupCancelled",
					"description": "Pickup scheduled for the package was cancelled."
				}
			]
		},
		"Event": {
			"type": "object",
			"required": [
				"eventCode",
				"eventTime"
			],
			"properties": {
				"eventCode": {
					"$ref": "#/definitions/EventCode"
				},
				"location": {
					"$ref": "#/definitions/Location"
				},
				"eventTime": {
					"type": "string",
					"format": "date-time",
					"description": "The ISO 8601 formatted timestamp of the event."
				}
			},
			"description": "A tracking event."
		},
		"TrackingSummary": {
			"type": "object",
			"properties": {
				"status": {
					"$ref": "#/definitions/Status"
				}
			},
			"description": "A package status summary."
		},
		"Status": {
			"type": "string",
			"description": "The status of the package being shipped.",
			"enum": [
				"PreTransit",
				"InTransit",
				"Delivered",
				"Lost",
				"OutForDelivery",
				"Rejected",
				"Undeliverable",
				"DeliveryAttempted",
				"PickupCancelled"
			],
			"x-docgen-enum-table-extension": [
				{
					"value": "PreTransit",
					"description": "Package has been created but has not been picked up."
				},
				{
					"value": "InTransit",
					"description": "Package has been picked up and is in transit."
				},
				{
					"value": "Delivered",
					"description": "Package has has been delivered successfully."
				},
				{
					"value": "Lost",
					"description": "Package is lost."
				},
				{
					"value": "OutForDelivery",
					"description": "Package is out for delivery."
				},
				{
					"value": "Rejected",
					"description": "Package has been rejected by the recipient."
				},
				{
					"value": "Undeliverable",
					"description": "Package was undeliverable."
				},
				{
					"value": "DeliveryAttempted",
					"description": "Delivery was attempted to the recipient location, but was not delivered."
				},
				{
					"value": "PickupCancelled",
					"description": "Pickup was cancelled for the package."
				}
			]
		},
		"AmazonOrderDetails": {
			"type": "object",
			"required": [
				"orderId"
			],
			"properties": {
				"orderId": {
					"type": "string",
					"description": "The Amazon order ID associated with the Amazon order fulfilled by this shipment."
				}
			},
			"description": "Amazon order information. This is required if the shipment source channel is Amazon."
		},
		"AmazonShipmentDetails": {
			"type": "object",
			"required": [
				"shipmentId"
			],
			"properties": {
				"shipmentId": {
					"type": "string",
					"description": "This attribute is required only for a Direct Fulfillment shipment. This is the encrypted shipment ID."
				}
			},
			"description": "Amazon shipment information."
		},
		"ChannelType": {
			"type": "string",
			"description": "The shipment source channel type.",
			"enum": [
				"AMAZON",
				"EXTERNAL"
			],
			"x-docgen-enum-table-extension": [
				{
					"value": "AMAZON",
					"description": "Indicates that the shipment originates from an Amazon order."
				},
				{
					"value": "EXTERNAL",
					"description": "Indicates that the shipment originates from a non-Amazon channel."
				}
			]
		},
		"ChannelDetails": {
			"type": "object",
			"required": [
				"channelType"
			],
			"properties": {
				"channelType": {
					"$ref": "#/definitions/ChannelType"
				},
				"amazonOrderDetails": {
					"$ref": "#/definitions/AmazonOrderDetails"
				},
				"amazonShipmentDetails": {
					"$ref": "#/definitions/AmazonShipmentDetails"
				}
			},
			"description": "Shipment source channel related information."
		},
		"RateList": {
			"type": "array",
			"description": "A list of eligible shipping service offerings.",
			"items": {
				"$ref": "#/definitions/Rate"
			}
		},
		"Rate": {
			"type": "object",
			"required": [
				"carrierId",
				"carrierName",
				"promise",
				"rateId",
				"requiresAdditionalInputs",
				"serviceId",
				"serviceName",
				"supportedDocumentSpecifications",
				"totalCharge"
			],
			"properties": {
				"rateId": {
					"$ref": "#/definitions/RateId"
				},
				"carrierId": {
					"$ref": "#/definitions/CarrierId"
				},
				"carrierName": {
					"$ref": "#/definitions/CarrierName"
				},
				"serviceId": {
					"$ref": "#/definitions/ServiceId"
				},
				"serviceName": {
					"$ref": "#/definitions/ServiceName"
				},
				"billedWeight": {
					"$ref": "#/definitions/Weight"
				},
				"totalCharge": {
					"$ref": "#/definitions/Currency"
				},
				"promise": {
					"$ref": "#/definitions/Promise"
				},
				"supportedDocumentSpecifications": {
					"$ref": "#/definitions/SupportedDocumentSpecificationList"
				},
				"availableValueAddedServiceGroups": {
					"$ref": "#/definitions/AvailableValueAddedServiceGroupList"
				},
				"requiresAdditionalInputs": {
					"type": "boolean",
					"description": "When true, indicates that additional inputs are required to purchase this shipment service. You must then call the getAdditionalInputs operation to return the JSON schema to use when providing the additional inputs to the purchaseShipment operation."
				},
				"rateItemList": {
					"$ref": "#/definitions/RateItemList"
				},
				"paymentType": {
					"$ref": "#/definitions/PaymentType"
				},
				"benefits": {
					"$ref": "#/definitions/Benefits"
				}
			},
			"description": "The details of a shipping service offering."
		},
		"IneligibilityReasonCode": {
			"type": "string",
			"description": "Reasons that make a shipment service offering ineligible.",
			"enum": [
				"NO_COVERAGE",
				"PICKUP_SLOT_RESTRICTION",
				"UNSUPPORTED_VAS",
				"VAS_COMBINATION_RESTRICTION",
				"SIZE_RESTRICTIONS",
				"WEIGHT_RESTRICTIONS",
				"LATE_DELIVERY",
				"PROGRAM_CONSTRAINTS",
				"TERMS_AND_CONDITIONS_NOT_ACCEPTED",
				"UNKNOWN"
			],
			"x-docgen-enum-table-extension": [
				{
					"value": "NO_COVERAGE",
					"description": "The shipment is ineligible because there is no coverage to that address."
				},
				{
					"value": "PICKUP_SLOT_RESTRICTION",
					"description": "The shipment is ineligible because there is an issue with the pickup slot."
				},
				{
					"value": "UNSUPPORTED_VAS",
					"description": "The shipment is ineligible because the value-added service is invalid for this shipment."
				},
				{
					"value": "VAS_COMBINATION_RESTRICTION",
					"description": "The shipment is ineligible because an invalid combination of value-added services were chosen."
				},
				{
					"value": "SIZE_RESTRICTIONS",
					"description": "The shipment is ineligible because the package dimensions are unsupported."
				},
				{
					"value": "WEIGHT_RESTRICTIONS",
					"description": "The shipment is ineligible because the weight is unsupported."
				},
				{
					"value": "LATE_DELIVERY",
					"description": "The shipment is ineligible because delivery is too late."
				},
				{
					"value": "PROGRAM_CONSTRAINTS",
					"description": "The shipment is ineligible because of program constraints."
				},
				{
					"value": "TERMS_AND_CONDITIONS_NOT_ACCEPTED",
					"description": "The shipment is ineligible because terms and conditions have not been accepted by the carrier."
				},
				{
					"value": "UNKNOWN",
					"description": "The ineligibility reason is unknown."
				}
			]
		},
		"IneligibilityReason": {
			"description": "The reason why a shipping service offering is ineligible.",
			"type": "object",
			"required": [
				"code",
				"message"
			],
			"properties": {
				"code": {
					"$ref": "#/definitions/IneligibilityReasonCode"
				},
				"message": {
					"type": "string",
					"description": "The ineligibility reason."
				}
			}
		},
		"IneligibleRate": {
			"description": "Detailed information for an ineligible shipping service offering.",
			"type": "object",
			"required": [
				"carrierId",
				"carrierName",
				"ineligibilityReasons",
				"serviceId",
				"serviceName"
			],
			"properties": {
				"serviceId": {
					"$ref": "#/definitions/ServiceId"
				},
				"serviceName": {
					"$ref": "#/definitions/ServiceName"
				},
				"carrierName": {
					"$ref": "#/definitions/CarrierName"
				},
				"carrierId": {
					"$ref": "#/definitions/CarrierId"
				},
				"ineligibilityReasons": {
					"type": "array",
					"description": "A list of reasons why a shipping service offering is ineligible.",
					"items": {
						"$ref": "#/definitions/IneligibilityReason"
					}
				}
			}
		},
		"IneligibleRateList": {
			"type": "array",
			"description": "A list of ineligible shipping service offerings.",
			"items": {
				"$ref": "#/definitions/IneligibleRate"
			}
		},
		"CancelShipmentResult": {
			"type": "object",
			"description": "The payload for the cancelShipment operation.",
			"additionalProperties": {}
		},
		"CancelShipmentResponse": {
			"type": "object",
			"properties": {
				"payload": {
					"$ref": "#/definitions/CancelShipmentResult"
				}
			},
			"description": "Response schema for the cancelShipment operation."
		},
		"GetRatesRequest": {
			"description": "The request schema for the getRates operation. When the channelType is Amazon, the shipTo address is not required and will be ignored.",
			"type": "object",
			"required": [
				"channelDetails",
				"packages",
				"shipFrom"
			],
			"properties": {
				"shipTo": {
					"description": "The ship to address.",
					"$ref": "#/definitions/Address"
				},
				"shipFrom": {
					"description": "The ship from address.",
					"$ref": "#/definitions/Address"
				},
				"returnTo": {
					"description": "The return to address.",
					"$ref": "#/definitions/Address"
				},
				"shipDate": {
					"type": "string",
					"format": "date-time",
					"description": "The ship date and time (the requested pickup). This defaults to the current date and time."
				},
				"shipperInstruction": {
					"$ref": "#/definitions/ShipperInstruction",
					"description": "Optional field for shipper Instruction."
				},
				"packages": {
					"$ref": "#/definitions/PackageList"
				},
				"valueAddedServices": {
					"$ref": "#/definitions/ValueAddedServiceDetails"
				},
				"taxDetails": {
					"$ref": "#/definitions/TaxDetailList"
				},
				"channelDetails": {
					"$ref": "#/definitions/ChannelDetails"
				},
				"clientReferenceDetails": {
					"$ref": "#/definitions/ClientReferenceDetails"
				},
				"shipmentType": {
					"$ref": "#/definitions/ShipmentType"
				}
			}
		},
		"GetRatesResult": {
			"type": "object",
			"required": [
				"rates",
				"requestToken"
			],
			"properties": {
				"requestToken": {
					"$ref": "#/definitions/RequestToken"
				},
				"rates": {
					"$ref": "#/definitions/RateList"
				},
				"ineligibleRates": {
					"$ref": "#/definitions/IneligibleRateList"
				}
			},
			"description": "The payload for the getRates operation."
		},
		"GetRatesResponse": {
			"type": "object",
			"properties": {
				"payload": {
					"$ref": "#/definitions/GetRatesResult"
				}
			},
			"description": "The response schema for the getRates operation."
		},
		"DirectPurchaseRequest": {
			"description": "The request schema for the directPurchaseShipment operation. When the channel type is Amazon, the shipTo address is not required and will be ignored.",
			"type": "object",
			"required": [
				"channelDetails"
			],
			"properties": {
				"shipTo": {
					"description": "The address where the shipment will be delivered. For vendor orders, shipTo information is pulled directly from the Amazon order.",
					"$ref": "#/definitions/Address"
				},
				"shipFrom": {
					"description": "The address where the package will be picked up.",
					"$ref": "#/definitions/Address"
				},
				"returnTo": {
					"description": "The address where the package will be returned if it cannot be delivered.",
					"$ref": "#/definitions/Address"
				},
				"packages": {
					"$ref": "#/definitions/PackageList"
				},
				"channelDetails": {
					"$ref": "#/definitions/ChannelDetails"
				},
				"labelSpecifications": {
					"description": "The document (label) specifications requested. The default label returned is PNG DPI 203 4x6 if no label specification is provided. Requesting an invalid file format results in a failure.",
					"$ref": "#/definitions/RequestedDocumentSpecification"
				}
			}
		},
		"DirectPurchaseResult": {
			"type": "object",
			"required": [
				"shipmentId"
			],
			"properties": {
				"shipmentId": {
					"$ref": "#/definitions/ShipmentId"
				},
				"packageDocumentDetailList": {
					"$ref": "#/definitions/PackageDocumentDetailList"
				}
			},
			"description": "The payload for the directPurchaseShipment operation."
		},
		"DirectPurchaseResponse": {
			"type": "object",
			"properties": {
				"payload": {
					"$ref": "#/definitions/DirectPurchaseResult"
				}
			},
			"description": "The response schema for the directPurchaseShipment operation."
		},
		"GetShipmentDocumentsResult": {
			"type": "object",
			"required": [
				"packageDocumentDetail",
				"shipmentId"
			],
			"properties": {
				"shipmentId": {
					"$ref": "#/definitions/ShipmentId"
				},
				"packageDocumentDetail": {
					"$ref": "#/definitions/PackageDocumentDetail"
				}
			},
			"description": "The payload for the getShipmentDocuments operation."
		},
		"GetShipmentDocumentsResponse": {
			"type": "object",
			"properties": {
				"payload": {
					"$ref": "#/definitions/GetShipmentDocumentsResult"
				}
			},
			"description": "The response schema for the the getShipmentDocuments operation."
		},
		"GetTrackingResult": {
			"type": "object",
			"required": [
				"eventHistory",
				"promisedDeliveryDate",
				"summary",
				"trackingId",
				"alternateLegTrackingId"
			],
			"properties": {
				"trackingId": {
					"$ref": "#/definitions/TrackingId"
				},
				"alternateLegTrackingId": {
					"$ref": "#/definitions/AlternateLegTrackingId"
				},
				"eventHistory": {
					"type": "array",
					"description": "A list of tracking events.",
					"items": {
						"$ref": "#/definitions/Event"
					}
				},
				"promisedDeliveryDate": {
					"type": "string",
					"format": "date-time",
					"description": "The date and time by which the shipment is promised to be delivered."
				},
				"summary": {
					"$ref": "#/definitions/TrackingSummary"
				}
			},
			"description": "The payload for the getTracking operation."
		},
		"GetTrackingResponse": {
			"type": "object",
			"properties": {
				"payload": {
					"$ref": "#/definitions/GetTrackingResult"
				}
			},
			"description": "The response schema for the getTracking operation."
		},
		"PurchaseShipmentRequest": {
			"description": "The request schema for the purchaseShipment operation.",
			"type": "object",
			"required": [
				"rateId",
				"requestedDocumentSpecification",
				"requestToken"
			],
			"properties": {
				"requestToken": {
					"$ref": "#/definitions/RequestToken"
				},
				"rateId": {
					"$ref": "#/definitions/RateId"
				},
				"requestedDocumentSpecification": {
					"$ref": "#/definitions/RequestedDocumentSpecification"
				},
				"requestedValueAddedServices": {
					"$ref": "#/definitions/RequestedValueAddedServiceList"
				},
				"additionalInputs": {
					"type": "object",
					"additionalProperties": {},
					"description": "The additional inputs required to purchase a shipping offering, in JSON format. The JSON provided here must adhere to the JSON schema that is returned in the response to the getAdditionalInputs operation.\n\nAdditional inputs are only required when indicated by the requiresAdditionalInputs property in the response to the getRates operation."
				}
			}
		},
		"PurchaseShipmentResult": {
			"type": "object",
			"required": [
				"packageDocumentDetails",
				"promise",
				"shipmentId"
			],
			"properties": {
				"shipmentId": {
					"$ref": "#/definitions/ShipmentId"
				},
				"packageDocumentDetails": {
					"$ref": "#/definitions/PackageDocumentDetailList"
				},
				"promise": {
					"$ref": "#/definitions/Promise"
				}
			},
			"description": "The payload for the purchaseShipment operation."
		},
		"PurchaseShipmentResponse": {
			"type": "object",
			"properties": {
				"payload": {
					"$ref": "#/definitions/PurchaseShipmentResult"
				}
			},
			"description": "The response schema for the purchaseShipment operation."
		},
		"OneClickShipmentRequest": {
			"description": "The request schema for the OneClickShipment operation. When the channelType is Amazon, the shipTo address is not required and will be ignored.",
			"type": "object",
			"required": [
				"channelDetails",
				"packages",
				"shipFrom",
				"labelSpecifications",
				"serviceSelection"
			],
			"properties": {
				"shipTo": {
					"description": "The ship to address.",
					"$ref": "#/definitions/Address"
				},
				"shipFrom": {
					"description": "The ship from address.",
					"$ref": "#/definitions/Address"
				},
				"returnTo": {
					"description": "The return to address.",
					"$ref": "#/definitions/Address"
				},
				"shipDate": {
					"type": "string",
					"format": "date-time",
					"description": "The ship date and time (the requested pickup). This defaults to the current date and time."
				},
				"packages": {
					"$ref": "#/definitions/PackageList"
				},
				"valueAddedServices": {
					"$ref": "#/definitions/OneClickShipmentValueAddedServiceDetails"
				},
				"taxDetails": {
					"$ref": "#/definitions/TaxDetailList"
				},
				"channelDetails": {
					"$ref": "#/definitions/ChannelDetails"
				},
				"labelSpecifications": {
					"$ref": "#/definitions/RequestedDocumentSpecification"
				},
				"serviceSelection": {
					"$ref": "#/definitions/ServiceSelection"
				},
				"shipperInstruction": {
					"$ref": "#/definitions/ShipperInstruction",
					"description": "Optional field for shipper Instruction."
				}
			}
		},
		"OneClickShipmentResponse": {
			"type": "object",
			"properties": {
				"payload": {
					"$ref": "#/definitions/OneClickShipmentResult"
				}
			},
			"description": "The response schema for the OneClickShipment operation."
		},
		"OneClickShipmentResult": {
			"type": "object",
			"required": [
				"packageDocumentDetails",
				"promise",
				"shipmentId",
				"service",
				"carrier",
				"totalCharge"
			],
			"properties": {
				"shipmentId": {
					"$ref": "#/definitions/ShipmentId"
				},
				"packageDocumentDetails": {
					"$ref": "#/definitions/PackageDocumentDetailList"
				},
				"promise": {
					"$ref": "#/definitions/Promise"
				},
				"carrier": {
					"$ref": "#/definitions/Carrier"
				},
				"service": {
					"$ref": "#/definitions/Service"
				},
				"totalCharge": {
					"$ref": "#/definitions/Currency"
				}
			},
			"description": "The payload for the OneClickShipment API."
		},
		"GetAdditionalInputsResult": {
			"type": "object",
			"description": "The JSON schema to use to provide additional inputs when required to purchase a shipping offering.",
			"additionalProperties": {}
		},
		"GetAdditionalInputsResponse": {
			"type": "object",
			"properties": {
				"payload": {
					"$ref": "#/definitions/GetAdditionalInputsResult"
				}
			},
			"description": "The response schema for the getAdditionalInputs operation."
		},
		"GetCarrierAccountsRequest": {
			"description": "The request schema for the GetCarrierAccounts operation.",
			"type": "object",
			"properties": {
				"clientReferenceDetails": {
					"$ref": "#/definitions/ClientReferenceDetails"
				}
			}
		},
		"LinkCarrierAccountRequest": {
			"description": "The request schema for verify and add the merchant's account with a certain carrier.",
			"type": "object",
			"required": [
				"carrierAccountAttributes",
				"carrierAccountType"
			],
			"properties": {
				"clientReferenceDetails": {
					"$ref": "#/definitions/ClientReferenceDetails"
				},
				"carrierAccountType": {
					"$ref": "#/definitions/CarrierAccountType"
				},
				"carrierAccountAttributes": {
					"$ref": "#/definitions/CarrierAccountAttributes"
				},
				"encryptedCarrierAccountAttributes": {
					"$ref": "#/definitions/CarrierAccountAttributes"
				}
			}
		},
		"UnlinkCarrierAccountRequest": {
			"description": "The request schema for remove the Carrier Account associated with the provided merchant.",
			"type": "object",
			"properties": {
				"clientReferenceDetails": {
					"$ref": "#/definitions/ClientReferenceDetails"
				}
			}
		},
		"GenerateCollectionFormRequest": {
			"description": "The request schema Call to generate the collection form.",
			"type": "object",
			"required": [
				"carrierId"
			],
			"properties": {
				"clientReferenceDetails": {
					"$ref": "#/definitions/ClientReferenceDetails"
				},
				"carrierId": {
					"$ref": "#/definitions/CarrierId"
				},
				"shipFromAddress": {
					"$ref": "#/definitions/Address"
				}
			}
		},
		"GetCollectionFormHistoryRequest": {
			"description": "The request schema to get query collections form history API .",
			"type": "object",
			"properties": {
				"clientReferenceDetails": {
					"$ref": "#/definitions/ClientReferenceDetails"
				},
				"maxResults": {
					"type": "integer",
					"description": "max Number of Results for query ."
				},
				"carrierId": {
					"$ref": "#/definitions/CarrierId"
				},
				"shipFromAddress": {
					"$ref": "#/definitions/Address"
				},
				"dateRange": {
					"$ref": "#/definitions/DateRange"
				}
			}
		},
		"GetUnmanifestedShipmentsRequest": {
			"description": "The request schema for the GetUnmanifestedShipmentsRequest operation.",
			"type": "object",
			"properties": {
				"clientReferenceDetails": {
					"$ref": "#/definitions/ClientReferenceDetails"
				}
			}
		},
		"GetCarrierAccountFormInputsResponse": {
			"description": "The Response  for the GetCarrierAccountFormInputsResponse operation.",
			"type": "object",
			"properties": {
				"linkableCarriersList": {
					"$ref": "#/definitions/LinkableCarriersList"
				}
			}
		},
		"GetCarrierAccountsResponse": {
			"description": "The Response  for the GetCarrierAccountsResponse operation.",
			"type": "object",
			"required": [
				"activeAccounts"
			],
			"properties": {
				"activeAccounts": {
					"$ref": "#/definitions/ActiveAccounts"
				}
			}
		},
		"LinkCarrierAccountResponse": {
			"description": "The Response  for the LinkCarrierAccount operation.",
			"type": "object",
			"properties": {
				"registrationStatus": {
					"$ref": "#/definitions/AccountStatus"
				}
			}
		},
		"UnlinkCarrierAccountResponse": {
			"description": "The Response  for the UnlinkCarrierAccountResponse operation.",
			"type": "object",
			"properties": {
				"isUnlinked": {
					"type": "boolean",
					"description": "Is Carrier unlinked from Merchant"
				}
			}
		},
		"GenerateCollectionFormResponse": {
			"description": "The Response  for the GenerateCollectionFormResponse operation.",
			"type": "object",
			"properties": {
				"collectionsFormDocument": {
					"$ref": "#/definitions/CollectionsFormDocument"
				}
			}
		},
		"GetCollectionFormHistoryResponse": {
			"description": "The Response  for the GetCollectionFormHistoryResponse operation.",
			"type": "object",
			"properties": {
				"collectionFormsHistoryRecordList": {
					"$ref": "#/definitions/CollectionFormsHistoryRecordList"
				},
				"lastRefreshedDate": {
					"type": "string",
					"description": "Last Refereshed Date of collection"
				}
			}
		},
		"GetUnmanifestedShipmentsResponse": {
			"description": "The Response  for the GetUnmanifestedShipmentsResponse operation.",
			"type": "object",
			"properties": {
				"unmanifestedCarrierInformationList": {
					"$ref": "#/definitions/UnmanifestedCarrierInformationList"
				}
			}
		},
		"GetCollectionFormResponse": {
			"description": "The Response  for the GetCollectionFormResponse operation.",
			"type": "object",
			"properties": {
				"collectionsFormDocument": {
					"$ref": "#/definitions/CollectionsFormDocument"
				}
			}
		},
		"ClientReferenceDetails": {
			"type": "array",
			"description": "Object to pass additional information about the MCI Integrator shipperType: List of ClientReferenceDetail",
			"items": {
				"$ref": "#/definitions/ClientReferenceDetail"
			}
		},
		"ClientReferenceDetail": {
			"type": "object",
			"required": [
				"clientReferenceType",
				"clientReferenceId"
			],
			"properties": {
				"clientReferenceType": {
					"type": "string",
					"description": "Client Reference type.",
					"enum": [
						"IntegratorShipperId",
						"IntegratorMerchantId"
					],
					"x-docgen-enum-table-extension": [
						{
							"value": "IntegratorShipperId",
							"description": "The unique identifier assigned to a 3P seller by the shipping integrator."
						},
						{
							"value": "IntegratorMerchantId",
							"description": "The unique identifier assigned to a 3P shipping integrator by Amazon."
						}
					]
				},
				"clientReferenceId": {
					"type": "string",
					"description": "The Client Reference Id."
				}
			},
			"description": "Client Reference Details"
		},
		"CollectionFormId": {
			"type": "string",
			"description": "Collection Form Id for Reprint ."
		},
		"ShipmentType": {
			"type": "string",
			"description": "Shipment type.",
			"enum": [
				"FORWARD",
				"RETURNS"
			],
			"x-docgen-enum-table-extension": [
				{
					"value": "FORWARD",
					"description": "The identifier for forward request."
				},
				{
					"value": "RETURNS",
					"description": "The identifier for return request."
				}
			]
		},
		"ActiveAccounts": {
			"type": "array",
			"description": "A list of ActiveAccount",
			"items": {
				"$ref": "#/definitions/ActiveAccount"
			}
		},
		"ActiveAccount": {
			"type": "object",
			"properties": {
				"accountId": {
					"type": "string",
					"description": "Account Id associated with this account."
				},
				"carrierId": {
					"$ref": "#/definitions/CarrierId"
				}
			},
			"description": "Active Account Details"
		},
		"DateRange": {
			"type": "object",
			"properties": {
				"startDate": {
					"type": "string",
					"format": "dateTime",
					"description": "Start Date for query ."
				},
				"endDate": {
					"type": "string",
					"format": "dateTime",
					"description": "end date for query."
				}
			},
			"description": "Date Range for query the results."
		},
		"CarrierAccountAttributes": {
			"type": "array",
			"description": "A list of all attributes required by the carrier in order to successfully link the merchant's account",
			"items": {
				"$ref": "#/definitions/CarrierAccountAttribute"
			}
		},
		"CarrierAccountAttribute": {
			"type": "object",
			"properties": {
				"attributeName": {
					"type": "string",
					"description": "Attribute Name ."
				},
				"propertyGroup": {
					"type": "string",
					"description": "Property Group."
				},
				"value": {
					"type": "string",
					"description": "Value ."
				}
			},
			"description": "Attribute Properties required by carrier"
		},
		"CarrierAccountType": {
			"type": "string",
			"description": "CarrierAccountType  associated with account."
		},
		"MerchantId": {
			"type": "string",
			"description": "merchant Id of provided merchant "
		},
		"AccountStatus": {
			"type": "string",
			"description": "Account Status.",
			"enum": [
				"ACTIVE",
				"INACTIVE",
				"PENDING",
				"SUSPENDED"
			],
			"x-docgen-enum-table-extension": [
				{
					"value": "ACTIVE",
					"description": "Seller Account is Active."
				},
				{
					"value": "INACTIVE",
					"description": "Seller Account is InActive."
				},
				{
					"value": "PENDING",
					"description": "Seller Account is Pending."
				},
				{
					"value": "SUSPENDED",
					"description": "Seller Account is Suspended."
				}
			]
		},
		"CollectionsFormDocument": {
			"type": "object",
			"properties": {
				"base64EncodedContent": {
					"type": "string",
					"description": "Base64 document Value of Collection."
				},
				"documentFormat": {
					"type": "string",
					"format": "application/pdf",
					"description": "Collection Document format is PDF."
				}
			},
			"description": "Collection Form Document Details"
		},
		"CollectionFormsHistoryRecordList": {
			"type": "array",
			"description": "A list of CollectionFormsHistoryRecord",
			"items": {
				"$ref": "#/definitions/CollectionFormsHistoryRecord"
			}
		},
		"CollectionFormsHistoryRecord": {
			"type": "object",
			"properties": {
				"carrierName": {
					"$ref": "#/definitions/CarrierName"
				},
				"creationDate": {
					"type": "string",
					"format": "dateTime",
					"description": "Creation Time for this account."
				},
				"generationStatus": {
					"$ref": "#/definitions/GenerationStatus"
				},
				"collectionFormId": {
					"$ref": "#/definitions/CollectionFormId"
				},
				"shipFromAddress": {
					"$ref": "#/definitions/Address"
				}
			},
			"description": "Active Account Details"
		},
		"UnmanifestedCarrierInformationList": {
			"type": "array",
			"description": "A list of UnmanifestedCarrierInformation",
			"items": {
				"$ref": "#/definitions/UnmanifestedCarrierInformation"
			}
		},
		"UnmanifestedCarrierInformation": {
			"type": "object",
			"properties": {
				"carrierId": {
					"$ref": "#/definitions/CarrierId"
				},
				"carrierName": {
					"$ref": "#/definitions/CarrierName"
				},
				"unmanifestedShipmentLocationList": {
					"$ref": "#/definitions/UnmanifestedShipmentLocationList"
				}
			},
			"description": "UnmanifestedCarrierInformation like carrierId CarrierName and Location"
		},
		"UnmanifestedShipmentLocationList": {
			"type": "array",
			"description": "A list of UnmanifestedShipmentLocation",
			"items": {
				"$ref": "#/definitions/UnmanifestedShipmentLocation"
			}
		},
		"UnmanifestedShipmentLocation": {
			"type": "object",
			"properties": {
				"address": {
					"$ref": "#/definitions/Address"
				},
				"lastManifestDate": {
					"type": "string",
					"format": "dateTime",
					"description": "Its Last Manifest Date."
				}
			},
			"description": "UnmanifestedShipmentLocation info "
		},
		"LinkableCarriersList": {
			"type": "array",
			"description": "A list of LinkableCarrier",
			"items": {
				"$ref": "#/definitions/LinkableCarrier"
			}
		},
		"LinkableCarrier": {
			"type": "object",
			"properties": {
				"carrierId": {
					"$ref": "#/definitions/CarrierId"
				},
				"linkableAccountTypes": {
					"$ref": "#/definitions/LinkableAccountTypeList"
				}
			},
			"description": "Info About Linkable Carrier"
		},
		"LinkableAccountTypeList": {
			"type": "array",
			"description": "A list of LinkableAccountType",
			"items": {
				"$ref": "#/definitions/LinkableAccountType"
			}
		},
		"LinkableAccountType": {
			"type": "object",
			"properties": {
				"accountType": {
					"$ref": "#/definitions/AccountType"
				},
				"carrierAccountInputs": {
					"$ref": "#/definitions/CarrierAccountInputsList"
				}
			},
			"description": "Info About Linkable Account Type"
		},
		"CarrierAccountInputsList": {
			"type": "array",
			"description": "A list of CarrierAccountInput",
			"items": {
				"$ref": "#/definitions/CarrierAccountInput"
			}
		},
		"CarrierAccountInput": {
			"type": "object",
			"properties": {
				"descriptionLocalizationKey": {
					"type": "string",
					"description": "descriptionLocalizationKey value ."
				},
				"name": {
					"type": "string",
					"description": "name value ."
				},
				"groupName": {
					"type": "string",
					"description": "groupName value ."
				},
				"inputType": {
					"$ref": "#/definitions/InputType"
				},
				"isMandatory": {
					"type": "boolean",
					"description": "mandatory or not  value ."
				},
				"isConfidential": {
					"type": "boolean",
					"description": "is value is Confidential ."
				},
				"isHidden": {
					"type": "boolean",
					"description": "is value is hidden ."
				},
				"validationMetadata": {
					"$ref": "#/definitions/ValidationMetadataList"
				}
			},
			"description": "Info About CarrierAccountInput"
		},
		"ValidationMetadataList": {
			"type": "array",
			"description": "A list of ValidationMetadata",
			"items": {
				"$ref": "#/definitions/ValidationMetadata"
			}
		},
		"ValidationMetadata": {
			"type": "object",
			"properties": {
				"errorMessage": {
					"type": "string",
					"description": "errorMessage for the error."
				},
				"validationStrategy": {
					"type": "string",
					"description": "validationStrategy for the error."
				},
				"value": {
					"type": "string",
					"description": "Value."
				}
			},
			"description": "ValidationMetadata Details"
		},
		"GenerationStatus": {
			"type": "string",
			"description": "Generation Status.",
			"enum": [
				"Completed",
				"InProgress"
			],
			"x-docgen-enum-table-extension": [
				{
					"value": "Completed",
					"description": "Genertaion is succesfully completed ."
				},
				{
					"value": "InProgress",
					"description": "Genertaion is in Progress."
				}
			]
		},
		"AccountType": {
			"type": "string",
			"description": "Shipper Account Type.",
			"enum": [
				"SHIPPER_ACCOUNT",
				"SHIPPER_ACCOUNT_WITH_INVOICE",
				"AMAZON_ACCOUNT"
			],
			"x-docgen-enum-table-extension": [
				{
					"value": "SHIPPER_ACCOUNT",
					"description": "Shipper Account in case of others carriers like : FEDEX, ROYLA_MAIL, DHL etc."
				},
				{
					"value": "SHIPPER_ACCOUNT_WITH_INVOICE",
					"description": "Shipper Account only for UPS ."
				},
				{
					"value": "AMAZON_ACCOUNT",
					"description": "this for default account and will be used if seller dont have any active linked account."
				}
			]
		},
		"InputType": {
			"type": "string",
			"description": "Type of Input.",
			"enum": [
				"TEXTBOX",
				"PASSWORD"
			],
			"x-docgen-enum-table-extension": [
				{
					"value": "TEXTBOX",
					"description": "Input Type is Textbox."
				},
				{
					"value": "PASSWORD",
					"description": "Input Type is Password."
				}
			]
		},
		"PaymentType": {
			"type": "string",
			"description": "Payment type of the purchase.",
			"enum": [
				"PAY_THROUGH_AMAZON",
				"PAY_DIRECT_TO_CARRIER"
			],
			"x-docgen-enum-table-extension": [
				{
					"value": "PAY_THROUGH_AMAZON",
					"description": "Payment Through Amazon."
				},
				{
					"value": "PAY_DIRECT_TO_CARRIER",
					"description": "Payment Direct to Carrier."
				}
			]
		},
		"RateItemList": {
			"type": "array",
			"description": "A list of RateItem",
			"items": {
				"$ref": "#/definitions/RateItem"
			}
		},
		"RateItem": {
			"type": "object",
			"properties": {
				"rateItemID": {
					"$ref": "#/definitions/RateItemID"
				},
				"rateItemType": {
					"$ref": "#/definitions/RateItemType"
				},
				"rateItemCharge": {
					"$ref": "#/definitions/Currency"
				},
				"rateItemNameLocalization": {
					"type": "string",
					"description": "Used for the localization."
				}
			},
			"description": "Rate Item for shipping (base cost, transaction fee, confirmation, insurance, etc.) Data source definition: "
		},
		"RateItemID": {
			"type": "string",
			"description": "Unique ID for the rateItem.",
			"enum": [
				"BASE_RATE",
				"TRANSACTION_FEE",
				"ADULT_SIGNATURE_CONFIRMATION",
				"SIGNATURE_CONFIRMATION",
				"NO_CONFIRMATION",
				"WAIVE_SIGNATURE",
				"IMPLIED_LIABILITY",
				"HIDDEN_POSTAGE",
				"DECLARED_VALUE",
				"SUNDAY_HOLIDAY_DELIVERY",
				"DELIVERY_CONFIRMATION",
				"IMPORT_DUTY_CHARGE",
				"VAT",
				"NO_SATURDAY_DELIVERY",
				"INSURANCE",
				"COD",
				"FUEL_SURCHARGE",
				"INSPECTION_CHARGE",
				"DELIVERY_AREA_SURCHARGE",
				"WAYBILL_CHARGE",
				"AMAZON_SPONSORED_DISCOUNT",
				"INTEGRATOR_SPONSORED_DISCOUNT",
				"OVERSIZE_SURCHARGE",
				"CONGESTION_CHARGE",
				"RESIDENTIAL_SURCHARGE",
				"ADDITIONAL_SURCHARGE",
				"SURCHARGE",
				"REBATE"
			],
			"x-docgen-enum-table-extension": [
				{
					"value": "BASE_RATE",
					"description": "for Base Rate."
				},
				{
					"value": "TRANSACTION_FEE",
					"description": "Charge for TransAction Fee."
				},
				{
					"value": "ADULT_SIGNATURE_CONFIRMATION",
					"description": "Charge for Adult Signature Confirmation."
				},
				{
					"value": "SIGNATURE_CONFIRMATION",
					"description": "Charge for signature confirmation."
				},
				{
					"value": "NO_CONFIRMATION",
					"description": "Charge for No Confirmation."
				},
				{
					"value": "WAIVE_SIGNATURE",
					"description": "Charge for Waive Signature."
				},
				{
					"value": "IMPLIED_LIABILITY",
					"description": "Charge for Implied Liability."
				},
				{
					"value": "HIDDEN_POSTAGE",
					"description": "Hidden Postage Charge."
				},
				{
					"value": "DECLARED_VALUE",
					"description": "Declared Valure Coverage Charge."
				},
				{
					"value": "SUNDAY_HOLIDAY_DELIVERY",
					"description": "Sunday Holiday Delivery Charge."
				},
				{
					"value": "DELIVERY_CONFIRMATION",
					"description": "Charge for Delivery Confirmation."
				},
				{
					"value": "IMPORT_DUTY_CHARGE",
					"description": "Import Duty Charge."
				},
				{
					"value": "VAT",
					"description": "Vat Charge."
				},
				{
					"value": "NO_SATURDAY_DELIVERY",
					"description": "Charge for No Satuarday Delivery."
				},
				{
					"value": "INSURANCE",
					"description": "Insurance Charge."
				},
				{
					"value": "COD",
					"description": "COD Charge."
				},
				{
					"value": "AMAZON_SPONSORED_DISCOUNT",
					"description": "Amazon Sponsored Discount."
				},
				{
					"value": "INTEGRATOR_SPONSORED_DISCOUNT",
					"description": "Integrator Sponsored Discount."
				},
				{
					"value": "FUEL_SURCHARGE",
					"description": "Fuel Surcharge."
				},
				{
					"value": "INSPECTION_CHARGE",
					"description": "Inspection Charge."
				},
				{
					"value": "DELIVERY_AREA_SURCHARGE",
					"description": "Delivery Area Surcharge."
				},
				{
					"value": "WAYBILL_CHARGE",
					"description": "WayBill Charge."
				},
				{
					"value": "OVERSIZE_SURCHARGE",
					"description": "OverSize Surcharge."
				},
				{
					"value": "CONGESTION_CHARGE",
					"description": "Congestion Charge."
				},
				{
					"value": "RESIDENTIAL_SURCHARGE",
					"description": "Residential Surcharge."
				},
				{
					"value": "ADDITIONAL_SURCHARGE",
					"description": "Additional Surcharge."
				},
				{
					"value": "SURCHARGE",
					"description": "Surcharge."
				},
				{
					"value": "REBATE",
					"description": "Rebate."
				}
			]
		},
		"RateItemType": {
			"type": "string",
			"description": "Type of the rateItem.",
			"enum": [
				"MANDATORY",
				"OPTIONAL",
				"INCLUDED"
			],
			"x-docgen-enum-table-extension": [
				{
					"value": "MANDATORY",
					"description": "Rate Item is mandatory."
				},
				{
					"value": "OPTIONAL",
					"description": "Rate Item is Optional."
				},
				{
					"value": "INCLUDED",
					"description": "Rate Item is included."
				}
			]
		},
		"Benefits": {
			"type": "object",
			"description": "Representing the included/excluded benefits that we offer for each ShippingOffering/Rate. Benefits being services provided by Amazon when sellers purchase shipping through Amazon.",
			"required": [
				"includedBenefits",
				"excludedBenefits"
			],
			"properties": {
				"includedBenefits": {
					"$ref": "#/definitions/IncludedBenefits"
				},
				"excludedBenefits": {
					"$ref": "#/definitions/ExcludedBenefits"
				}
			}
		},
		"IncludedBenefits": {
			"type": "array",
			"description": "A list of included benefits.",
			"items": {
				"type": "string"
			}
		},
		"ExcludedBenefits": {
			"type": "array",
			"description": "A list of excluded benefit. Refer to the ExcludeBenefit object for further documentation",
			"items": {
				"$ref": "#/definitions/ExcludedBenefit"
			}
		},
		"ExcludedBenefit": {
			"type": "object",
			"description": "Object representing an excluded benefit that is excluded for an ShippingOffering/Rate.",
			"required": [
				"benefit",
				"reasonCode"
			],
			"properties": {
				"benefit": {
					"type": "string"
				},
				"reasonCode": {
					"type": "string"
				}
			}
		},
		"ServiceSelection": {
			"description": "Service Selection Criteria, initially only Service Id list is the criteria.",
			"type": "object",
			"required": [
				"serviceId"
			],
			"properties": {
				"serviceId": {
					"$ref": "#/definitions/ServiceIds"
				}
			}
		},
		"ServiceIds": {
			"type": "array",
			"description": "A list of ServiceId.",
			"items": {
				"type": "string"
			}
		},
		"OneClickShipmentValueAddedServiceDetails": {
			"type": "array",
			"description": "The value-added services to be added to a shipping service purchase.",
			"items": {
				"$ref": "#/definitions/OneClickShipmentValueAddedService"
			}
		},
		"OneClickShipmentValueAddedService": {
			"type": "object",
			"required": [
				"id"
			],
			"properties": {
				"id": {
					"type": "string",
					"description": "The identifier of the selected value-added service."
				},
				"amount": {
					"$ref": "#/definitions/Currency"
				}
			},
			"description": "A value-added service to be applied to a shipping service purchase."
		},
		"Service": {
			"type": "object",
			"required": [
				"id",
				"name"
			],
			"properties": {
				"serviceId": {
					"$ref": "#/definitions/ServiceId"
				},
				"serviceName": {
					"$ref": "#/definitions/ServiceName"
				}
			},
			"description": "Service Related Info"
		},
		"Carrier": {
			"type": "object",
			"required": [
				"id",
				"name"
			],
			"properties": {
				"carrierId": {
					"$ref": "#/definitions/CarrierId"
				},
				"carrierName": {
					"$ref": "#/definitions/CarrierName"
				}
			},
			"description": "Carrier Related Info"
		}
	}
}
